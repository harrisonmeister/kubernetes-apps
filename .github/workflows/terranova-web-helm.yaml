name: Docker Build & Push (terranova-web-app)

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/terranova-web-helm.yaml'
      - 'terranova-web/**'
  schedule:
    - cron: '0 6 * * 1-5' # Monday to Friday at 6:00 AM UTC
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write 
      id-token: write
      attestations: write # Required to upload the attestation artifact
    
    env:
      DOCKER_USER: harrisonmeister
      IMAGE_NAME: terranova-web

    steps:
      - name: 1. Calculate Version Tag
        id: version
        run: |
          DATE=$(date +%Y.%m.%d)
          VERSION_TAG="${DATE}.${{ github.run_number }}"
          echo "tag=${VERSION_TAG}" >> $GITHUB_OUTPUT
          echo "Generated tag: $VERSION_TAG"

      - name: 2. Checkout repository
        uses: actions/checkout@v4

      - name: 3. Set up QEMU (for multi-platform)
        uses: docker/setup-qemu-action@v3

      - name: 4. Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 5. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 6. Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 7. Determine tags (for Docker Hub and GHCR)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: 8. Build and Load Image Locally
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./terranova-web
          file: ./terranova-web/Dockerfile
          push: false
          load: true
          tags: ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:latest 
          platforms: linux/amd64

      - name: 9. Attest Build Provenance for Docker Hub
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: false

      - name: 10. Attest Build Provenance for GHCR
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: false

      - name: 11. Final Push to Docker Hub and GHCR
        run: |
          # Define the local tag
          LOCAL_TAG="${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:latest"

          # Combine all metadata tags and custom tags
          ALL_TAGS="${{ steps.meta.outputs.tags }},${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }},ghcr.io/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.tag }}"
          
          # Manually tag and push the image to all target repositories
          for TAG in $(echo $ALL_TAGS | sed "s/,/ /g"); do
            echo "Pushing $TAG"
            docker tag $LOCAL_TAG $TAG
            docker push $TAG
          done