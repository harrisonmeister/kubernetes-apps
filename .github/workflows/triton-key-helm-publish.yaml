name: Publish OCI Helm Chart (triton-key)

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/triton-key-helm-publish.yaml'
      - 'helm-charts/triton-key/**'
  workflow_dispatch:

env:
  DOCKER_USER: harrisonmeister
  IMAGE_NAME: triton-key
  CHART_SOURCE_DIR: ./helm-charts/triton-key
  GHCR_OCI_REPO: harrisonmeister

jobs:
  publish-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Calculate Version Tag
        id: version
        run: |
          set -euo pipefail
          VERSION_TAG="0.4.${{ github.run_number }}"
          echo "tag=${VERSION_TAG}" >> "$GITHUB_OUTPUT"
          echo "Calculated chart version: $VERSION_TAG"

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Prepare Chart for Release
        id: package
        env:
          CHART_VERSION: ${{ steps.version.outputs.tag }}
        run: |
          set -euo pipefail
          
          export CHART_VERSION 
          
          yq e -i -o yaml '
            .appVersion = strenv(CHART_VERSION) |
            .version = strenv(CHART_VERSION)
          ' "${{ env.CHART_SOURCE_DIR }}/Chart.yaml"

          echo "Updated Chart.yaml contents:"
          yq e . "${{ env.CHART_SOURCE_DIR }}/Chart.yaml"
          
          helm package "${{ env.CHART_SOURCE_DIR }}"

          PACKAGE_FILE=$(ls ${IMAGE_NAME}-*.tgz)
          echo "chart_archive_name=${PACKAGE_FILE}" >> "$GITHUB_OUTPUT"
          echo "Packaged chart: ${PACKAGE_FILE}"

      - name: Log in to Docker Hub Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | helm registry login \
            registry-1.docker.io \
            -u ${{ env.DOCKER_USER }} \
            --password-stdin

      - name: Push Chart to Docker Hub (OCI)
        run: |
          helm push "${{ steps.package.outputs.chart_archive_name }}" \
            oci://registry-1.docker.io/${{ env.DOCKER_USER }}

      - name: Log in to GHCR (for OCI push)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Chart to GHCR (OCI)
        run: |
          helm push "${{ steps.package.outputs.chart_archive_name }}" \
            oci://ghcr.io/${{ env.GHCR_OCI_REPO }}
